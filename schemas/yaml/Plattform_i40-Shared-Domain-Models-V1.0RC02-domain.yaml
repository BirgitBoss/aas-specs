openapi: 3.0.3
info:
  title: DotAAS Part 2 | HTTP/REST | Shared Domain Models
  description: >-
    The entire meta-model as part of Details of the Asset Administration Shell
    Part 1
  contact:
    name: >-
      Michael Hoffmeister, Torben Miny, Andreas Orzelski, Manuel Sauer,
      Constantin Ziesche
  version: V1.0RC02
  termsOfService: https://github.com/admin-shell-io/aas-specs
components:
  parameters:
    Level:
      name: level
      in: query
      description: Determines the structural depth of the respective resource content
      required: false
      schema:
        type: string
        default: deep
        enum:
          - deep
          - core
    Content:
      name: content
      in: query
      description: Determines the request or response kind of the resource
      required: false
      schema:
        type: string
        default: normal
        enum:
          - normal
          - trimmed
          - value
          - reference
          - path
    Extent:
      name: extent
      in: query
      description: Determines to which extent the resource is being serialized
      required: false
      schema:
        type: string
        enum:
          - withBlobValue
          - withoutBlobValue
    SemanticId:
      name: semanticId
      in: query
      description: The value of the semantic id reference (BASE64-URL-encoded)
      schema:
        type: string
  schemas:
    AdministrativeInformation:
      allOf:
        - $ref: '#/components/schemas/HasDataSpecification'
        - properties:
            version:
              type: string
              minLength: 1
            revision:
              type: string
              minLength: 1
    AnnotatedRelationshipElement:
      allOf:
        - $ref: '#/components/schemas/RelationshipElement'
        - properties:
            annotation:
              type: array
              items:
                $ref: '#/components/schemas/DataElement'
    AssetAdministrationShell:
      allOf:
        - $ref: '#/components/schemas/Identifiable'
        - $ref: '#/components/schemas/HasDataSpecification'
        - properties:
            assetInformation:
              $ref: '#/components/schemas/AssetInformation'
            submodels:
              type: array
              items:
                $ref: '#/components/schemas/ModelReference'
            derivedFrom:
              $ref: '#/components/schemas/ModelReference'
          required:
            - assetInformation
    AssetInformation:
      type: object
      properties:
        assetKind:
          $ref: '#/components/schemas/AssetKind'
        globalAssetId:
          $ref: '#/components/schemas/GlobalReference'
        specificAssetId:
          $ref: '#/components/schemas/IdentifierKeyValuePair'
        defaultThumbnail:
          $ref: '#/components/schemas/Resource'
      required:
        - assetKind
    AssetKind:
      type: string
      enum:
        - Type
        - Instance
    BasicEventElement:
      allOf:
        - $ref: '#/components/schemas/EventElement'
        - properties:
            observed:
              $ref: '#/components/schemas/ModelReference'
            direction:
              $ref: '#/components/schemas/Direction'
            state:
              $ref: '#/components/schemas/StateOfEvent'
            messageTopic:
              type: string
              minLength: 1
            messageBroker:
              $ref: '#/components/schemas/ModelReference'
            lastUpdate:
              type: string
              pattern: >-
                ^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\.[0-9]+)?)|24:00:00(\.0+)?)Z$
            minInterval:
              type: string
              pattern: >-
                ^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\.[0-9]+)?)|24:00:00(\.0+)?)Z$
            maxInterval:
              type: string
              pattern: >-
                ^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\.[0-9]+)?)|24:00:00(\.0+)?)Z$
          required:
            - observed
            - direction
            - state
    Blob:
      allOf:
        - $ref: '#/components/schemas/DataElement'
        - properties:
            mimeType:
              type: string
              minLength: 1
              pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([ \t]*;[ \t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"(([\t !#-\\[\\]-~]|[\\x80-\\xff])|\\\\([\t !-~]|[\\x80-\\xff]))*\"))*$"
            value:
              type: string
          required:
            - mimeType
    Capability:
      $ref: '#/components/schemas/SubmodelElement'
    ConceptDescription:
      allOf:
        - $ref: '#/components/schemas/Identifiable'
        - $ref: '#/components/schemas/HasDataSpecification'
        - properties:
            isCaseOf:
              type: array
              items:
                $ref: '#/components/schemas/GlobalReference'
    DataElement:
      $ref: '#/components/schemas/SubmodelElement'
    DataTypeDefXsd:
      type: string
      enum:
        - xs:anyURI
        - xs:base64Binary
        - xs:boolean
        - xs:date
        - xs:dateTime
        - xs:dateTimeStamp
        - xs:decimal
        - xs:double
        - xs:duration
        - xs:float
        - xs:gDay
        - xs:gMonth
        - xs:gMonthDay
        - xs:gYear
        - xs:gYearMonth
        - xs:hexBinary
        - xs:string
        - xs:time
        - xs:dayTimeDuration
        - xs:yearMonthDuration
        - xs:integer
        - xs:long
        - xs:int
        - xs:short
        - xs:byte
        - xs:NonNegativeInteger
        - xs:positiveInteger
        - xs:unsignedLong
        - xs:unsignedInt
        - xs:unsignedShort
        - xs:unsignedByte
        - xs:nonPositiveInteger
        - xs:negativeInteger
    Direction:
      type: string
      enum:
        - INPUT
        - OUTPUT
    Entity:
      allOf:
        - $ref: '#/components/schemas/SubmodelElement'
        - properties:
            entityType:
              $ref: '#/components/schemas/EntityType'
            statements:
              type: array
              items:
                $ref: '#/components/schemas/SubmodelElement'
            globalAssetId:
              $ref: '#/components/schemas/Reference'
            specificAssetId:
              $ref: '#/components/schemas/IdentifierKeyValuePair'
          required:
            - entityType
    EntityType:
      type: string
      enum:
        - COMANAGEDENTITY
        - SELFMANAGEDENTITY
    Environment:
      type: object
      properties:
        assetAdministrationShells:
          type: array
          items:
            $ref: '#/components/schemas/AssetAdministrationShell'
        submodels:
          type: array
          items:
            $ref: '#/components/schemas/Submodel'
        conceptDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/ConceptDescription'
    EventElement:
      $ref: '#/components/schemas/SubmodelElement'
    EventPayload:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/ModelReference'
        sourceSemanticId:
          $ref: '#/components/schemas/GlobalReference'
        observableReference:
          $ref: '#/components/schemas/ModelReference'
        observableSemanticId:
          $ref: '#/components/schemas/GlobalReference'
        topic:
          type: string
          minLength: 1
        subjectId:
          $ref: '#/components/schemas/GlobalReference'
        timeStamp:
          type: string
          pattern: >-
            ^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\.[0-9]+)?)|24:00:00(\.0+)?)Z$
        payload:
          type: string
          minLength: 1
      required:
        - source
        - observableReference
        - timeStamp
    Extension:
      allOf:
        - $ref: '#/components/schemas/HasSemantics'
        - properties:
            name:
              type: string
              minLength: 1
            valueType:
              $ref: '#/components/schemas/DataTypeDefXsd'
            value:
              type: string
            refersTo:
              $ref: '#/components/schemas/ModelReference'
          required:
            - name
    File:
      allOf:
        - $ref: '#/components/schemas/DataElement'
        - properties:
            contentType:
              type: string
              minLength: 1
              pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([ \t]*;[ \t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"(([\t !#-\\[\\]-~]|[\\x80-\\xff])|\\\\([\t !-~]|[\\x80-\\xff]))*\"))*$"
            value:
              type: string
              minLength: 1
              pattern: >-
                ^file:(//((localhost|(\[((([0-9A-Fa-f]{1,4}:){6}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|::([0-9A-Fa-f]{1,4}:){5}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|([0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){4}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){3}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){2}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){2}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){4}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(([0-9A-Fa-f]{1,4}:){6}[0-9A-Fa-f]{1,4})?::)|[vV][0-9A-Fa-f]+\.([a-zA-Z0-9\-._~]|[!$&'()*+,;=]|:)+)\]|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|([a-zA-Z0-9\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=])*)))?/((([a-zA-Z0-9\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))+(/(([a-zA-Z0-9\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))*)*)?|/((([a-zA-Z0-9\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))+(/(([a-zA-Z0-9\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))*)*)?)$
          required:
            - contentType
    GlobalReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - properties:
            value:
              type: string
              minLength: 1
          required:
            - value
    HasDataSpecification:
      type: object
      properties:
        dataSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/GlobalReference'
    HasExtensions:
      type: object
      properties:
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/Extension'
    HasKind:
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/ModelingKind'
    HasSemantics:
      type: object
      properties:
        semanticId:
          $ref: '#/components/schemas/GlobalReference'
    Identifiable:
      allOf:
        - $ref: '#/components/schemas/Referable'
        - properties:
            id:
              type: string
              minLength: 1
            administration:
              $ref: '#/components/schemas/AdministrativeInformation'
          required:
            - id
    IdentifierKeyValuePair:
      allOf:
        - $ref: '#/components/schemas/HasSemantics'
        - properties:
            key:
              type: string
              minLength: 1
            value:
              type: string
              minLength: 1
            externalSubjectId:
              $ref: '#/components/schemas/GlobalReference'
          required:
            - key
            - value
    Key:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/KeyElements'
        value:
          type: string
          minLength: 1
      required:
        - type
        - value
    KeyElements:
      type: string
      enum:
        - FragmentReference
        - GlobalReference
        - AnnotatedRelationshipElement
        - AssetAdministrationShell
        - BasicEventElement
        - Blob
        - Capability
        - ConceptDescription
        - DataElement
        - Entity
        - EventElement
        - File
        - MultiLanguageProperty
        - Operation
        - Property
        - Range
        - ReferenceElement
        - RelationshipElement
        - Submodel
        - SubmodelElement
        - SubmodelElementList
        - SubmodelElementStruct
    LangString:
      type: object
      properties:
        language:
          type: string
          pattern: >-
            ^(([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){2})?|[a-zA-Z]{4}|[a-zA-Z]{5,8})(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-(([a-zA-Z0-9]){5,8}|[0-9]([a-zA-Z0-9]){3}))*(-[0-9A-WY-Za-wy-z](-([a-zA-Z0-9]){2,8})+)*(-[xX](-([a-zA-Z0-9]){1,8})+)?|[xX](-([a-zA-Z0-9]){1,8})+|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$
        text:
          type: string
      required:
        - language
        - text
    LangStringSet:
      type: object
      properties:
        langStrings:
          type: array
          items:
            $ref: '#/components/schemas/LangString'
          minItems: 1
      required:
        - langStrings
    ModelReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - properties:
            keys:
              type: array
              items:
                $ref: '#/components/schemas/Key'
              minItems: 1
            referredSemanticId:
              $ref: '#/components/schemas/GlobalReference'
          required:
            - keys
    ModelType:
      type: string
      enum:
        - Qualifier
        - AssetAdministrationShell
        - Submodel
        - SubmodelElementList
        - SubmodelElementStruct
        - Property
        - MultiLanguageProperty
        - Range
        - ReferenceElement
        - Blob
        - File
        - AnnotatedRelationshipElement
        - Entity
        - BasicEventElement
        - Operation
        - Capability
        - ConceptDescription
        - View
        - GlobalReference
        - ModelReference
    ModelingKind:
      type: string
      enum:
        - TEMPLATE
        - INSTANCE
    MultiLanguageProperty:
      allOf:
        - $ref: '#/components/schemas/DataElement'
        - properties:
            value:
              $ref: '#/components/schemas/LangStringSet'
            valueId:
              $ref: '#/components/schemas/GlobalReference'
    Operation:
      allOf:
        - $ref: '#/components/schemas/SubmodelElement'
        - properties:
            inputVariables:
              type: array
              items:
                $ref: '#/components/schemas/OperationVariable'
            outputVariables:
              type: array
              items:
                $ref: '#/components/schemas/OperationVariable'
            inoutputVariables:
              type: array
              items:
                $ref: '#/components/schemas/OperationVariable'
    OperationVariable:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/SubmodelElement'
      required:
        - value
    Property:
      allOf:
        - $ref: '#/components/schemas/DataElement'
        - properties:
            valueType:
              $ref: '#/components/schemas/DataTypeDefXsd'
            value:
              type: string
            valueId:
              $ref: '#/components/schemas/GlobalReference'
          required:
            - valueType
    Qualifiable:
      type: object
      properties:
        qualifiers:
          type: array
          items:
            $ref: '#/components/schemas/Qualifier'
        modelType:
          $ref: '#/components/schemas/ModelType'
      required:
        - modelType
    Qualifier:
      allOf:
        - $ref: '#/components/schemas/HasSemantics'
        - properties:
            type:
              type: string
              minLength: 1
            valueType:
              $ref: '#/components/schemas/DataTypeDefXsd'
            value:
              type: string
            valueId:
              $ref: '#/components/schemas/GlobalReference'
            modelType:
              $ref: '#/components/schemas/ModelType'
          required:
            - type
            - valueType
            - modelType
    Range:
      allOf:
        - $ref: '#/components/schemas/DataElement'
        - properties:
            valueType:
              $ref: '#/components/schemas/DataTypeDefXsd'
            min:
              type: string
            max:
              type: string
          required:
            - valueType
    Referable:
      allOf:
        - $ref: '#/components/schemas/HasExtensions'
        - properties:
            idShort:
              type: string
              minLength: 1
              maxLength: 128
            displayName:
              $ref: '#/components/schemas/LangStringSet'
            category:
              type: string
              minLength: 1
            description:
              $ref: '#/components/schemas/LangStringSet'
            checksum:
              type: string
              minLength: 1
            modelType:
              $ref: '#/components/schemas/ModelType'
          required:
            - modelType
    Reference:
      type: object
      properties:
        modelType:
          $ref: '#/components/schemas/ModelType'
      required:
        - modelType
    ReferenceElement:
      allOf:
        - $ref: '#/components/schemas/DataElement'
        - properties:
            value:
              $ref: '#/components/schemas/Reference'
    RelationshipElement:
      allOf:
        - $ref: '#/components/schemas/SubmodelElement'
        - properties:
            first:
              $ref: '#/components/schemas/Reference'
            second:
              $ref: '#/components/schemas/Reference'
          required:
            - first
            - second
    Resource:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/AssetKind'
        contentType:
          type: string
          minLength: 1
          pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([ \t]*;[ \t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"(([\t !#-\\[\\]-~]|[\\x80-\\xff])|\\\\([\t !-~]|[\\x80-\\xff]))*\"))*$"
      required:
        - path
    StateOfEvent:
      type: string
      enum:
        - 'ON'
        - 'OFF'
    Submodel:
      allOf:
        - $ref: '#/components/schemas/Identifiable'
        - $ref: '#/components/schemas/HasKind'
        - $ref: '#/components/schemas/HasSemantics'
        - $ref: '#/components/schemas/Qualifiable'
        - $ref: '#/components/schemas/HasDataSpecification'
        - properties:
            submodelElements:
              type: array
              items:
                $ref: '#/components/schemas/SubmodelElement'
    SubmodelElement:
      allOf:
        - $ref: '#/components/schemas/Referable'
        - $ref: '#/components/schemas/HasKind'
        - $ref: '#/components/schemas/HasSemantics'
        - $ref: '#/components/schemas/Qualifiable'
        - $ref: '#/components/schemas/HasDataSpecification'
    SubmodelElementElements:
      type: string
      enum:
        - AnnotatedRelationshipElement
        - BasicEventElement
        - Blob
        - Capability
        - DataElement
        - Entity
        - EventElement
        - File
        - MultiLanguageProperty
        - Operation
        - Property
        - Range
        - ReferenceElement
        - RelationshipElement
        - SubmodelElement
        - SubmodelElementList
        - SubmodelElementStruct
    SubmodelElementList:
      allOf:
        - $ref: '#/components/schemas/SubmodelElement'
        - properties:
            typeValueListElement:
              $ref: '#/components/schemas/SubmodelElementElements'
            orderRelevant:
              type: boolean
            value:
              type: array
              items:
                $ref: '#/components/schemas/SubmodelElement'
            semanticIdListElement:
              $ref: '#/components/schemas/GlobalReference'
            valueTypeListElement:
              $ref: '#/components/schemas/DataTypeDefXsd'
          required:
            - typeValueListElement
    SubmodelElementStruct:
      allOf:
        - $ref: '#/components/schemas/SubmodelElement'
        - properties:
            value:
              type: array
              items:
                $ref: '#/components/schemas/SubmodelElement'
    View:
      allOf:
        - $ref: '#/components/schemas/Referable'
        - $ref: '#/components/schemas/HasSemantics'
        - $ref: '#/components/schemas/HasDataSpecification'
        - properties:
            containedElements:
              type: array
              items:
                $ref: '#/components/schemas/Reference'
