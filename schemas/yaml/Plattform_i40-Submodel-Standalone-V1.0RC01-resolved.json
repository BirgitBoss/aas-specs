{
  "openapi": "3.0.3",
  "info": {
    "title": "DotAAS Part 2 | HTTP/REST | Submodel (standalone)",
    "description": "An exemplary interface for the use case of a standalone Submodel, e.g. running in a Docker container",
    "termsOfService": "https://github.com/admin-shell-io/aas-specs",
    "contact": {
      "name": "Michael Hoffmeister, Torben Miny, Andreas Orzelski, Manuel Sauer, Constantin Ziesche"
    },
    "version": "V1.0RC01"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/submodel": {
      "get": {
        "tags": [
          "Submodel Interface"
        ],
        "summary": "Returns the Submodel",
        "operationId": "GetSubmodel",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "Determines the structural depth of the respective resource content",
            "required": false,
            "schema": {
              "type": "string",
              "default": "deep",
              "enum": [
                "deep",
                "core"
              ]
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "Determines the request or response kind of the resource",
            "required": false,
            "schema": {
              "type": "string",
              "default": "normal",
              "enum": [
                "normal",
                "trimmed",
                "value",
                "reference",
                "path"
              ]
            }
          },
          {
            "name": "extent",
            "in": "query",
            "description": "Determines to which extent the resource is being serialized",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "withBlobValue",
                "withoutBlobValue"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested Submodel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submodel"
                }
              }
            }
          }
        },
        "x-semanticIds": [
          "https://admin-shell.io/aas/API/GetSubmodel/1/0/RC02"
        ]
      },
      "put": {
        "tags": [
          "Submodel Interface"
        ],
        "summary": "Updates the Submodel",
        "operationId": "PutSubmodel",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "Determines the structural depth of the respective resource content",
            "required": false,
            "schema": {
              "type": "string",
              "default": "deep",
              "enum": [
                "deep",
                "core"
              ]
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "Determines the request or response kind of the resource",
            "required": false,
            "schema": {
              "type": "string",
              "default": "normal",
              "enum": [
                "normal",
                "trimmed",
                "value",
                "reference",
                "path"
              ]
            }
          },
          {
            "name": "extent",
            "in": "query",
            "description": "Determines to which extent the resource is being serialized",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "withBlobValue",
                "withoutBlobValue"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Submodel object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Submodel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Submodel updated successfully"
          }
        },
        "x-semanticIds": [
          "https://admin-shell.io/aas/API/PutSubmodel/1/0/RC02"
        ]
      }
    },
    "/submodel/submodel-elements": {
      "get": {
        "tags": [
          "Submodel Interface"
        ],
        "summary": "Returns all submodel elements including their hierarchy",
        "operationId": "GetAllSubmodelElements",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "Determines the structural depth of the respective resource content",
            "required": false,
            "schema": {
              "type": "string",
              "default": "deep",
              "enum": [
                "deep",
                "core"
              ]
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "Determines the request or response kind of the resource",
            "required": false,
            "schema": {
              "type": "string",
              "default": "normal",
              "enum": [
                "normal",
                "trimmed",
                "value",
                "reference",
                "path"
              ]
            }
          },
          {
            "name": "extent",
            "in": "query",
            "description": "Determines to which extent the resource is being serialized",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "withBlobValue",
                "withoutBlobValue"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found submodel elements",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmodelElement"
                  }
                }
              }
            }
          }
        },
        "x-semanticIds": [
          "https://admin-shell.io/aas/API/GetAllSubmodelElements/1/0/RC02",
          "https://admin-shell.io/aas/API/GetAllSubmodelElementsBySemanticId/1/0/RC02",
          "https://admin-shell.io/aas/API/GetAllSubmodelElementsByParentPathAndSemanticId/1/0/RC02"
        ]
      },
      "post": {
        "tags": [
          "Submodel Interface"
        ],
        "summary": "Creates a new submodel element",
        "operationId": "PostSubmodelElement",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "Determines the structural depth of the respective resource content",
            "required": false,
            "schema": {
              "type": "string",
              "default": "deep",
              "enum": [
                "deep",
                "core"
              ]
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "Determines the request or response kind of the resource",
            "required": false,
            "schema": {
              "type": "string",
              "default": "normal",
              "enum": [
                "normal",
                "trimmed",
                "value",
                "reference",
                "path"
              ]
            }
          },
          {
            "name": "extent",
            "in": "query",
            "description": "Determines to which extent the resource is being serialized",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "withBlobValue",
                "withoutBlobValue"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Requested submodel element",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmodelElement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Submodel element created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              }
            }
          }
        },
        "x-semanticIds": [
          "https://admin-shell.io/aas/API/PostSubmodelElement/1/0/RC02"
        ]
      }
    },
    "/submodel/submodel-elements/{idShortPath}": {
      "get": {
        "tags": [
          "Submodel Interface"
        ],
        "summary": "Returns a specific submodel element from the Submodel at a specified path",
        "operationId": "GetSubmodelElementByPath",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "Determines the structural depth of the respective resource content",
            "required": false,
            "schema": {
              "type": "string",
              "default": "deep",
              "enum": [
                "deep",
                "core"
              ]
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "Determines the request or response kind of the resource",
            "required": false,
            "schema": {
              "type": "string",
              "default": "normal",
              "enum": [
                "normal",
                "trimmed",
                "value",
                "reference",
                "path"
              ]
            }
          },
          {
            "name": "extent",
            "in": "query",
            "description": "Determines to which extent the resource is being serialized",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "withBlobValue",
                "withoutBlobValue"
              ]
            }
          },
          {
            "name": "idShortPath",
            "in": "path",
            "description": "IdShort path to the submodel element (dot-separated)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested submodel element",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              }
            }
          }
        },
        "x-semanticIds": [
          "https://admin-shell.io/aas/API/GetSubmodelElementByPath/1/0/RC02"
        ]
      },
      "put": {
        "tags": [
          "Submodel Interface"
        ],
        "summary": "Updates an existing submodel element at a specified path within submodel elements hierarchy",
        "operationId": "PutSubmodelElementByPath",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "Determines the structural depth of the respective resource content",
            "required": false,
            "schema": {
              "type": "string",
              "default": "deep",
              "enum": [
                "deep",
                "core"
              ]
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "Determines the request or response kind of the resource",
            "required": false,
            "schema": {
              "type": "string",
              "default": "normal",
              "enum": [
                "normal",
                "trimmed",
                "value",
                "reference",
                "path"
              ]
            }
          },
          {
            "name": "extent",
            "in": "query",
            "description": "Determines to which extent the resource is being serialized",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "withBlobValue",
                "withoutBlobValue"
              ]
            }
          },
          {
            "name": "idShortPath",
            "in": "path",
            "description": "IdShort path to the submodel element (dot-separated)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Requested submodel element",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmodelElement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Submodel element updated successfully"
          }
        },
        "x-semanticIds": [
          "https://admin-shell.io/aas/API/PutSubmodelElementByPath/1/0/RC02",
          "https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/1/0/RC02"
        ]
      },
      "post": {
        "tags": [
          "Submodel Interface"
        ],
        "summary": "Creates a new submodel element at a specified path within submodel elements hierarchy",
        "operationId": "PostSubmodelElementByPath",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "Determines the structural depth of the respective resource content",
            "required": false,
            "schema": {
              "type": "string",
              "default": "deep",
              "enum": [
                "deep",
                "core"
              ]
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "Determines the request or response kind of the resource",
            "required": false,
            "schema": {
              "type": "string",
              "default": "normal",
              "enum": [
                "normal",
                "trimmed",
                "value",
                "reference",
                "path"
              ]
            }
          },
          {
            "name": "extent",
            "in": "query",
            "description": "Determines to which extent the resource is being serialized",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "withBlobValue",
                "withoutBlobValue"
              ]
            }
          },
          {
            "name": "idShortPath",
            "in": "path",
            "description": "IdShort path to the submodel element (dot-separated)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Requested submodel element",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmodelElement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Submodel element created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              }
            }
          }
        },
        "x-semanticIds": [
          "https://admin-shell.io/aas/API/PostSubmodelElementByPath/1/0/RC02"
        ]
      },
      "delete": {
        "tags": [
          "Submodel Interface"
        ],
        "summary": "Deletes a submodel element at a specified path within the submodel elements hierarchy",
        "operationId": "DeleteSubmodelElementByPath",
        "parameters": [
          {
            "name": "idShortPath",
            "in": "path",
            "description": "IdShort path to the submodel element (dot-separated)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Submodel element deleted successfully"
          }
        },
        "x-semanticIds": [
          "https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/1/0/RC02"
        ]
      }
    },
    "/submodel/submodel-elements/{idShortPath}/invoke": {
      "post": {
        "tags": [
          "Submodel Interface"
        ],
        "summary": "Synchronously or asynchronously invokes an Operation at a specified path",
        "operationId": "InvokeOperation",
        "parameters": [
          {
            "name": "async",
            "in": "query",
            "description": "Determines whether an operation invocation is performed asynchronously or synchronously",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "Determines the request or response kind of the resource",
            "required": false,
            "schema": {
              "type": "string",
              "default": "normal",
              "enum": [
                "normal",
                "trimmed",
                "value",
                "reference",
                "path"
              ]
            }
          },
          {
            "name": "idShortPath",
            "in": "path",
            "description": "IdShort path to the submodel element (dot-separated), in this case an operation",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Operation request object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Operation result object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        },
        "x-semanticIds": [
          "https://admin-shell.io/aas/API/InvokeOperationSync/1/0/RC02",
          "https://admin-shell.io/aas/API/InvokeOperationAsync/1/0/RC02"
        ]
      }
    },
    "/submodel/submodel-elements/{idShortPath}/operation-results/{handleId}": {
      "get": {
        "tags": [
          "Submodel Interface"
        ],
        "summary": "Returns the Operation result of an asynchronous invoked Operation",
        "operationId": "GetOperationAsyncResult",
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "normal",
              "enum": [
                "normal",
                "value"
              ]
            }
          },
          {
            "name": "idShortPath",
            "in": "path",
            "description": "IdShort path to the submodel element (dot-separated), in this case an operation",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "handleId",
            "in": "path",
            "description": "The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (BASE64-URL-encoded)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation result object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResult"
                }
              }
            }
          }
        },
        "x-semanticIds": [
          "https://admin-shell.io/aas/API/GetOperationAsyncResult/1/0/RC02"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Submodel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Identifiable"
          },
          {
            "$ref": "#/components/schemas/HasDataSpecification"
          },
          {
            "$ref": "#/components/schemas/Qualifiable"
          },
          {
            "$ref": "#/components/schemas/HasSemantics"
          },
          {
            "properties": {
              "kind": {
                "$ref": "#/components/schemas/ModelingKind"
              },
              "submodelElements": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              }
            }
          }
        ]
      },
      "Identifiable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Referable"
          },
          {
            "required": [
              "identification"
            ],
            "properties": {
              "administration": {
                "$ref": "#/components/schemas/AdministrativeInformation"
              },
              "identification": {
                "$ref": "#/components/schemas/Identifier"
              }
            }
          }
        ]
      },
      "Referable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HasExtensions"
          },
          {
            "required": [
              "idShort",
              "modelType"
            ],
            "properties": {
              "category": {
                "type": "string"
              },
              "description": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LangString"
                }
              },
              "displayName": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LangString"
                }
              },
              "idShort": {
                "type": "string"
              },
              "modelType": {
                "$ref": "#/components/schemas/ModelType"
              }
            }
          }
        ]
      },
      "HasExtensions": {
        "type": "object",
        "properties": {
          "extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            }
          }
        }
      },
      "Extension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HasSemantics"
          },
          {
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "refersTo": {
                "$ref": "#/components/schemas/Reference"
              },
              "value": {
                "type": "string"
              },
              "valueType": {
                "$ref": "#/components/schemas/ValueTypeEnum"
              }
            }
          }
        ]
      },
      "HasSemantics": {
        "type": "object",
        "properties": {
          "semanticId": {
            "$ref": "#/components/schemas/Reference"
          }
        }
      },
      "Reference": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/GlobalReference"
          },
          {
            "$ref": "#/components/schemas/ModelReference"
          }
        ]
      },
      "GlobalReference": {
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          }
        }
      },
      "Identifier": {
        "type": "string"
      },
      "ModelReference": {
        "required": [
          "keys"
        ],
        "properties": {
          "referredSemanticId": {
            "$ref": "#/components/schemas/GlobalReference"
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Key"
            }
          }
        }
      },
      "Key": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/KeyElements"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "KeyElements": {
        "type": "string",
        "enum": [
          "AssetAdministrationShell",
          "AccessPermissionRule",
          "ConceptDescription",
          "Submodel",
          "AnnotatedRelationshipElement",
          "BasicEvent",
          "Blob",
          "Capability",
          "DataElement",
          "File",
          "Entity",
          "Event",
          "MultiLanguageProperty",
          "Operation",
          "Property",
          "Range",
          "ReferenceElement",
          "RelationshipElement",
          "SubmodelElement",
          "SubmodelElementList",
          "SubmodelElementStruct",
          "View",
          "FragmentReference"
        ]
      },
      "ValueTypeEnum": {
        "type": "string",
        "enum": [
          "anyUri",
          "base64Binary",
          "boolean",
          "date",
          "dateTime",
          "dateTimeStamp",
          "decimal",
          "integer",
          "long",
          "int",
          "short",
          "byte",
          "nonNegativeInteger",
          "positiveInteger",
          "unsignedLong",
          "unsignedInt",
          "unsignedShort",
          "unsignedByte",
          "nonPositiveInteger",
          "negativeInteger",
          "double",
          "duration",
          "dayTimeDuration",
          "yearMonthDuration",
          "float",
          "gDay",
          "gMonth",
          "gMonthDay",
          "gYear",
          "gYearMonth",
          "hexBinary",
          "NOTATION",
          "QName",
          "string",
          "normalizedString",
          "token",
          "language",
          "Name",
          "NCName",
          "ENTITY",
          "ID",
          "IDREF",
          "NMTOKEN",
          "time"
        ]
      },
      "LangString": {
        "required": [
          "language",
          "text"
        ],
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "ModelType": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ModelTypes"
          }
        }
      },
      "ModelTypes": {
        "type": "string",
        "enum": [
          "AssetAdministrationShell",
          "ConceptDescription",
          "Submodel",
          "AnnotatedRelationshipElement",
          "BasicEvent",
          "Blob",
          "Capability",
          "DataElement",
          "File",
          "Entity",
          "Event",
          "ModelReference",
          "MultiLanguageProperty",
          "Operation",
          "Property",
          "Range",
          "ReferenceElement",
          "RelationshipElement",
          "SubmodelElement",
          "SubmodelElementList",
          "SubmodelElementStruct",
          "View",
          "GlobalReference",
          "FragmentReference",
          "Constraint",
          "Formula",
          "Qualifier"
        ]
      },
      "AdministrativeInformation": {
        "type": "object",
        "properties": {
          "revision": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "HasDataSpecification": {
        "type": "object",
        "properties": {
          "embeddedDataSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmbeddedDataSpecification"
            }
          }
        }
      },
      "EmbeddedDataSpecification": {
        "required": [
          "dataSpecification",
          "dataSpecificationContent"
        ],
        "type": "object",
        "properties": {
          "dataSpecification": {
            "$ref": "#/components/schemas/Reference"
          },
          "dataSpecificationContent": {
            "$ref": "#/components/schemas/DataSpecificationContent"
          }
        }
      },
      "DataSpecificationContent": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DataSpecificationIEC61360Content"
          },
          {
            "$ref": "#/components/schemas/DataSpecificationPhysicalUnitContent"
          }
        ]
      },
      "DataSpecificationIEC61360Content": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ValueObject"
          },
          {
            "required": [
              "preferredName"
            ],
            "type": "object",
            "properties": {
              "dataType": {
                "type": "string",
                "enum": [
                  "DATE",
                  "STRING",
                  "STRING_TRANSLATABLE",
                  "REAL_MEASURE",
                  "REAL_COUNT",
                  "REAL_CURRENCY",
                  "BOOLEAN",
                  "URL",
                  "RATIONAL",
                  "RATIONAL_MEASURE",
                  "TIME",
                  "TIMESTAMP",
                  "INTEGER_COUNT",
                  "INTEGER_MEASURE",
                  "INTEGER_CURRENCY"
                ]
              },
              "definition": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LangString"
                }
              },
              "levelType": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LevelType"
                }
              },
              "preferredName": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LangString"
                }
              },
              "shortName": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LangString"
                }
              },
              "sourceOfDefinition": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "unit": {
                "type": "string"
              },
              "unitId": {
                "$ref": "#/components/schemas/Reference"
              },
              "valueFormat": {
                "type": "string"
              },
              "valueList": {
                "$ref": "#/components/schemas/ValueList"
              }
            }
          }
        ]
      },
      "ValueObject": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "valueId": {
            "$ref": "#/components/schemas/Reference"
          },
          "valueType": {
            "$ref": "#/components/schemas/ValueTypeEnum"
          }
        }
      },
      "LevelType": {
        "type": "string",
        "enum": [
          "Min",
          "Max",
          "Nom",
          "Typ"
        ]
      },
      "ValueList": {
        "required": [
          "valueReferencePairTypes"
        ],
        "type": "object",
        "properties": {
          "valueReferencePairTypes": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueReferencePairType"
            }
          }
        }
      },
      "ValueReferencePairType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ValueObject"
          }
        ]
      },
      "DataSpecificationPhysicalUnitContent": {
        "required": [
          "definition",
          "unitName",
          "unitSymbol"
        ],
        "type": "object",
        "properties": {
          "conversionFactor": {
            "type": "string"
          },
          "definition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LangString"
            }
          },
          "dinNotation": {
            "type": "string"
          },
          "eceCode": {
            "type": "string"
          },
          "eceName": {
            "type": "string"
          },
          "nistName": {
            "type": "string"
          },
          "registrationAuthorityId": {
            "type": "string"
          },
          "siName": {
            "type": "string"
          },
          "siNotation": {
            "type": "string"
          },
          "sourceOfDefinition": {
            "type": "string"
          },
          "supplier": {
            "type": "string"
          },
          "unitName": {
            "type": "string"
          },
          "unitSymbol": {
            "type": "string"
          }
        }
      },
      "Qualifiable": {
        "type": "object",
        "properties": {
          "qualifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Constraint"
            }
          }
        }
      },
      "Constraint": {
        "required": [
          "modelType"
        ],
        "properties": {
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/Qualifier"
          },
          {
            "$ref": "#/components/schemas/Formula"
          }
        ]
      },
      "Qualifier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HasSemantics"
          },
          {
            "$ref": "#/components/schemas/ValueObject"
          },
          {
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Formula": {
        "allOf": [
          {
            "properties": {
              "dependsOn": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reference"
                }
              }
            }
          }
        ]
      },
      "ModelingKind": {
        "type": "string",
        "enum": [
          "Template",
          "Instance"
        ]
      },
      "SubmodelElement": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Blob"
          },
          {
            "$ref": "#/components/schemas/File"
          },
          {
            "$ref": "#/components/schemas/Capability"
          },
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "$ref": "#/components/schemas/BasicEvent"
          },
          {
            "$ref": "#/components/schemas/MultiLanguageProperty"
          },
          {
            "$ref": "#/components/schemas/Operation"
          },
          {
            "$ref": "#/components/schemas/Property"
          },
          {
            "$ref": "#/components/schemas/Range"
          },
          {
            "$ref": "#/components/schemas/ReferenceElement"
          },
          {
            "$ref": "#/components/schemas/AnnotatedRelationshipElement"
          },
          {
            "$ref": "#/components/schemas/RelationshipElement"
          },
          {
            "$ref": "#/components/schemas/SubmodelElementList"
          },
          {
            "$ref": "#/components/schemas/SubmodelElementStruct"
          }
        ]
      },
      "Blob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          },
          {
            "required": [
              "mimeType"
            ],
            "properties": {
              "mimeType": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SubmodelElementAttributes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Referable"
          },
          {
            "$ref": "#/components/schemas/HasDataSpecification"
          },
          {
            "$ref": "#/components/schemas/HasSemantics"
          },
          {
            "$ref": "#/components/schemas/Qualifiable"
          },
          {
            "properties": {
              "kind": {
                "$ref": "#/components/schemas/ModelingKind"
              }
            }
          }
        ]
      },
      "File": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          },
          {
            "required": [
              "mimeType"
            ],
            "properties": {
              "mimeType": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Capability": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Referable"
          },
          {
            "$ref": "#/components/schemas/HasDataSpecification"
          },
          {
            "$ref": "#/components/schemas/HasSemantics"
          },
          {
            "$ref": "#/components/schemas/Qualifiable"
          },
          {
            "properties": {
              "kind": {
                "$ref": "#/components/schemas/ModelingKind"
              }
            }
          }
        ]
      },
      "Entity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          },
          {
            "required": [
              "entityType"
            ],
            "properties": {
              "entityType": {
                "$ref": "#/components/schemas/EntityType"
              },
              "globalAssetId": {
                "$ref": "#/components/schemas/Reference"
              },
              "specificAssetIds": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdentifierKeyValuePair"
                }
              },
              "statements": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              }
            }
          }
        ]
      },
      "EntityType": {
        "type": "string",
        "enum": [
          "CoManagedEntity",
          "SelfManagedEntity"
        ]
      },
      "IdentifierKeyValuePair": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HasSemantics"
          },
          {
            "required": [
              "key",
              "subjectId",
              "value"
            ],
            "properties": {
              "key": {
                "type": "string"
              },
              "subjectId": {
                "$ref": "#/components/schemas/Reference"
              },
              "value": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          }
        ]
      },
      "BasicEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "required": [
              "observed"
            ],
            "properties": {
              "observed": {
                "$ref": "#/components/schemas/Reference"
              }
            }
          }
        ]
      },
      "MultiLanguageProperty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          },
          {
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LangString"
                }
              },
              "valueId": {
                "$ref": "#/components/schemas/Reference"
              }
            }
          }
        ]
      },
      "Operation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          },
          {
            "properties": {
              "inoutputVariable": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OperationVariable"
                }
              },
              "inputVariable": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OperationVariable"
                }
              },
              "outputVariable": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OperationVariable"
                }
              }
            }
          }
        ]
      },
      "OperationVariable": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Blob"
              },
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "$ref": "#/components/schemas/Capability"
              },
              {
                "$ref": "#/components/schemas/Entity"
              },
              {
                "$ref": "#/components/schemas/Event"
              },
              {
                "$ref": "#/components/schemas/BasicEvent"
              },
              {
                "$ref": "#/components/schemas/MultiLanguageProperty"
              },
              {
                "$ref": "#/components/schemas/Operation"
              },
              {
                "$ref": "#/components/schemas/Property"
              },
              {
                "$ref": "#/components/schemas/Range"
              },
              {
                "$ref": "#/components/schemas/ReferenceElement"
              },
              {
                "$ref": "#/components/schemas/AnnotatedRelationshipElement"
              },
              {
                "$ref": "#/components/schemas/RelationshipElement"
              },
              {
                "$ref": "#/components/schemas/SubmodelElementList"
              },
              {
                "$ref": "#/components/schemas/SubmodelElementStruct"
              }
            ]
          }
        }
      },
      "Property": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          },
          {
            "$ref": "#/components/schemas/ValueObject"
          }
        ]
      },
      "Range": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          },
          {
            "required": [
              "valueType"
            ],
            "properties": {
              "max": {
                "type": "string"
              },
              "min": {
                "type": "string"
              },
              "valueType": {
                "$ref": "#/components/schemas/ValueTypeEnum"
              }
            }
          }
        ]
      },
      "ReferenceElement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          },
          {
            "properties": {
              "value": {
                "$ref": "#/components/schemas/Reference"
              }
            }
          }
        ]
      },
      "AnnotatedRelationshipElement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RelationshipElement"
          },
          {
            "properties": {
              "annotation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DataElement"
                }
              }
            }
          }
        ]
      },
      "RelationshipElement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          },
          {
            "required": [
              "first",
              "second"
            ],
            "properties": {
              "first": {
                "$ref": "#/components/schemas/Reference"
              },
              "second": {
                "$ref": "#/components/schemas/Reference"
              }
            }
          }
        ]
      },
      "DataElement": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Blob"
          },
          {
            "$ref": "#/components/schemas/File"
          },
          {
            "$ref": "#/components/schemas/MultiLanguageProperty"
          },
          {
            "$ref": "#/components/schemas/Property"
          },
          {
            "$ref": "#/components/schemas/Range"
          },
          {
            "$ref": "#/components/schemas/ReferenceElement"
          }
        ]
      },
      "SubmodelElementList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          },
          {
            "properties": {
              "semanticIdValues": {
                "$ref": "#/components/schemas/Reference"
              },
              "submodelElementTypeValues": {
                "$ref": "#/components/schemas/ModelType"
              },
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              },
              "valueTypeValues": {
                "$ref": "#/components/schemas/ValueTypeEnum"
              }
            }
          }
        ]
      },
      "SubmodelElementStruct": {
        "properties": {
          "value": {
            "$ref": "#/components/schemas/SubmodelElement"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/SubmodelElementAttributes"
          }
        ]
      },
      "OperationRequest": {
        "type": "object",
        "properties": {
          "inoutputArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationVariable"
            }
          },
          "inputArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationVariable"
            }
          },
          "requestId": {
            "type": "string"
          },
          "timeout": {
            "type": "integer"
          }
        }
      },
      "OperationResult": {
        "type": "object",
        "properties": {
          "executionResult": {
            "$ref": "#/components/schemas/Result"
          },
          "executionState": {
            "type": "string",
            "enum": [
              "Initiated",
              "Running",
              "Completed",
              "Canceled",
              "Failed",
              "Timeout"
            ]
          },
          "inoutputArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationVariable"
            }
          },
          "outputArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationVariable"
            }
          },
          "requestId": {
            "type": "string"
          }
        }
      },
      "Result": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "messageType": {
            "type": "string",
            "enum": [
              "Undefined",
              "Info",
              "Warning",
              "Error",
              "Exception"
            ]
          },
          "text": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        }
      }
    }
  }
}